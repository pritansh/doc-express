<title>Responsive website template for documentations</title>
<!-- Meta -->
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="">
<meta name="author" content="">
<link rel="shortcut icon" href="favicon.ico">
<link href='http://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800'
    rel='stylesheet' type='text/css'>
<!-- Global CSS -->
<link rel="stylesheet" href="assets/plugins/bootstrap/css/bootstrap.min.css">
<!-- Plugins CSS -->
<link rel="stylesheet" href="assets/plugins/font-awesome/css/font-awesome.css">
<link rel="stylesheet" href="assets/plugins/elegant_font/css/style.css">
<link rel="stylesheet" href="assets/plugins/prism/prism.css">

<!-- Theme CSS -->
<link id="theme-style" rel="stylesheet" href="assets/css/styles.css">

<script>
    function removeChilds(element, id) {
        while(element.firstChild)
            element.removeChild(element.firstChild)
        btn = document.querySelector('a#' + id) 
        if(btn)
            btn.parentNode.removeChild(btn)
    }
    function update(element, str, type) {
        element.appendChild(new DOMParser().parseFromString(str, type).children[0].children[1].children[0])
    }
    function check(element) {
        str = ''
        if(element) {
            str += '<td>'
            keys = Object.keys(element)
            for(j=0;j<keys.length;j++)
                str += `<span class="label label-success">${keys[j]}: ${element[keys[j]]}</span>&nbsp;`
            str += '</td>'
        }
        return str
    }
    function highlight(str) {
        xhttp = new XMLHttpRequest()
        xhttp.onreadystatechange = function() {
            if(this.readyState == 4 && this.status == 200) {
                node = document.querySelector('section.cards-section.text-center').children[0].children[0]
                html = JSON.parse(this.responseText)['html']
                html = html.replace(/\n/g, '<br/>')
                html = html.replace(/\t/g, '&nbsp;&nbsp;&nbsp;&nbsp;')
                str = `<div><br/><br/>
                        <div class="callout-block callout-success">
                            <div class="icon-holder">
                                <i class="fa fa-thumbs-up"></i>
                            </div><!--//icon-holder-->
                            <div class="content">
                                <h4 class="callout-title">${html}</h4>
                            </div><!--//content-->
                        </div></div>`
                update(node.parentNode, str, 'text/html')
            }
        }
        xhttp.open('POST', 'http://localhost:9993/syntax', true)
        xhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')
        xhttp.send(`text=${str}`)
    }
    function test_api(data, request) {
        data = JSON.parse(decodeURIComponent(data))
        xhttp = new XMLHttpRequest()
        xhttp.onreadystatechange = function() {
            if(this.readyState == 4 && this.status == 200) {
                highlight(this.responseText)
            }
        }
        if(data.method == 'GET') {
            xhttp.open('GET', 'http://localhost:9992/user', true)
            xhttp.send()
        }
        else if(data.method == 'POST') {
            request = request.replace(/\$/g, '\'').split('&')
            for(m=0;m<request.length;m++) {
                temp = request[m].split('=')
                temp[1] = eval(temp[1]).value
                request[m] = temp.join('=')
            }
            request = request.join('&')
            xhttp.open('POST', 'http://localhost:9992/user', true)
            xhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')
            xhttp.send(request)
        }
    }
    function api_call(obj) {
        obj = JSON.parse(decodeURIComponent(obj))
        data = {}
        data['method'] = obj.method
        data['url'] = obj.url
        if(obj.params)
            data['params'] = obj.params
        if(obj.body)
            data['body'] = obj.body
        node = document.querySelector('section.cards-section.text-center').children[0].children[0]
        parent = node.parentNode.innerHTML
        removeChilds(node, 'api')
        html = `<div><h2 class="title">${obj.desc}</h2>`
        request = ''
        if(obj.method == 'GET')
            if(obj.params)
                html += `<p><code><i class="fa fa-exclamation-circle">&nbsp;&nbsp;</i>Params</code></p>`
        if(obj.method == 'POST')
            if(obj.body) {
                html += `<code><i class="fa fa-exclamation-circle">&nbsp;&nbsp;</i>Body</code><br/>`
                keys = Object.keys(obj.body)
                for(k=0;k<keys.length;k++) {
                    if(k > 0)
                        request += '&'
                    html += `<br/><div class="input-group input-group-sm" style="margin: 0 auto;width:30%"><span class="input-group-addon">${keys[k]}</span><input id="${keys[k]}" type="text" class="form-control" style="width:20vw;"/></div>`
                    request += `${keys[k]}=document.getElementById($${keys[k]}$)`
                }
            }
        html += `<br/><br/><a class="btn btn-green" onclick="test_api('${encodeURIComponent(JSON.stringify(data))}', '${request}')"><i class="fa fa-download"></i>Test</a></div>`
        update(node.parentNode, html, 'text/html')
    }
    function load_model(model_name) {
        xhttp = new XMLHttpRequest()
        xhttp.onreadystatechange = function() {
            if(this.readyState == 4 && this.status == 200) {
                node = document.querySelector('section.cards-section.text-center').children[0].children[0]
                parent = node.parentNode.innerHTML
                removeChilds(node, 'model')
                routes = JSON.parse(this.responseText)['routes']
                console.log(routes)
                str = `<div class="table-responsive">
                            <table class="table table">
                                <thead>
                                    <tr>
                                        <th>Description</th>
                                        <th>Method</th>
                                        <th>Url</th>
                                        <th>Params/Body</th>
                                        <th>Test</th>
                                    </tr>
                                </thead>
                                <tbody>`
                for(i=0;i<routes.length;i++) {
                    str += `<tr>
                                <td>${routes[i].desc}</td>
                                <td>${routes[i].method}</td>
                                <td>${routes[i].url}</td>`
                    str += check(routes[i].params, str)
                    str += check(routes[i].body, str)
                    str += `    <td><a class="btn btn-blue btn-cta" onclick="api_call('${encodeURIComponent(JSON.stringify(routes[i]))}')"><i class="fa fa-play-circle"></i>Test</a></td>
                            </tr>`
                }
                str += `</tbody></table></div>`
                update(node, str, 'text/html')
                btn = document.createElement('a')
                btn.classList.add('btn')
                btn.classList.add('btn-primary')
                btn.id = 'api'
                btn.innerText = 'Models'
                btn.onclick = function(event) {
                    load_models()
                }
                node.parentNode.appendChild(btn)
            }
        }
        xhttp.open('GET', 'http://localhost:9993/model/' + model_name, true)
        xhttp.send()
    }
    function load_models() {
        xhttp = new XMLHttpRequest()
        xhttp.onreadystatechange = function() {
            if(this.readyState == 4 && this.status == 200) {
                node = document.querySelector('section.cards-section.text-center').children[0].children[0]
                parent = node.parentNode.innerHTML
                removeChilds(node, 'api')
                console.log(JSON.parse(this.responseText))
                models = JSON.parse(this.responseText)['models']
                for(i=0;i<models.length;i++)
                    update(node, `<div class="item item-pink item-2 col-md-4 col-sm-6 col-xs-6">
                        <div class="item-inner" onclick="load_model(\'${models[i]}\')">
                            <div class="icon-holder">
                                <span aria-hidden="true" class="icon icon_puzzle_alt"></span>
                            </div>
                            <!--//icon-holder-->
                            <h3 class="title">${models[i]}</h3>
                            <p class="intro">View routes of ${models[i]} model</p>
                        </div>
                        <!--//item-inner-->
                    </div>`, 'text/html')
                btn = document.createElement('a')
                btn.classList.add('btn')
                btn.classList.add('btn-primary')
                btn.id = 'model'
                btn.innerText = 'Home'
                btn.onclick = function(event) {
                    load_home()
                }
                node.parentNode.appendChild(btn)
            }
        }
        xhttp.open('GET', 'http://localhost:9993/json', true)
        xhttp.send()
    }
    function load_home() {
        location.reload()
    }
</script>